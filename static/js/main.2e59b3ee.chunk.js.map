{"version":3,"sources":["components/Todos/TodoForm.js","components/Todos/Todo.js","components/Todos/TodoFilter.js","components/Todos/TodoList.js","components/App.js","index.js"],"names":["TodoForm","todos","setTodos","deleteDone","useState","input","setInput","className","onSubmit","e","preventDefault","id","Math","floor","random","text","checked","type","onChange","target","value","Todo","props","state","this","selected","map","todo","defaultChecked","onClick","onCheck","deleteTodo","filter","renderList","React","Component","TodoFilter","onSelect","TodoList","setSelected","console","log","newTodos","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2e59b3ee.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport './scss/TodoForm.scss'\r\n\r\n\r\nconst TodoForm = ({ todos, setTodos, deleteDone }) => {\r\n    const[input, setInput] = useState('')\r\n\r\n    const onChange = (e) => {\r\n        setInput(e.target.value);\r\n\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        setTodos([...todos, {id: Math.floor(Math.random() * 10000), text: input, checked: false}])\r\n        setInput('')\r\n    }\r\n\r\n\r\n    return(\r\n        <div className='inputWrapper'>\r\n            <form onSubmit={handleSubmit}>\r\n                <input type=\"text\" onChange={onChange} value={input} className='textInput'/>\r\n                <button>Add Todo</button>\r\n            </form>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default TodoForm;","import { render } from '@testing-library/react';\r\nimport React from 'react';\r\n\r\nimport './scss/Todo.scss'\r\nimport { AiFillDelete } from 'react-icons/ai'\r\n\r\nclass Todo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.state = {\r\n            props: this.props,\r\n        }\r\n    }\r\n\r\n    renderList() {\r\n        if(this.props.selected === \"all\"){\r\n            return(\r\n                this.props.todos.map(todo => {\r\n                    if(todo.checked === true){\r\n                        return(\r\n                        <div key={todo.id} className='checked todoDiv'>\r\n                            <p>{todo.text}</p>\r\n                            <input type=\"checkbox\" defaultChecked={todo.checked}\r\n                            onClick={() => this.props.onCheck(todo.id)} />\r\n                            <AiFillDelete className='icon' onClick={() => this.props.deleteTodo(todo.id)} />\r\n                        </div>\r\n                        )\r\n\r\n                    } else {\r\n                        return(\r\n                            <div key={todo.id} className='unChecked todoDiv'>\r\n                            <p>{todo.text}</p>\r\n                    <input type=\"checkbox\" defaultChecked={todo.checked}\r\n                    onClick={() => this.props.onCheck(todo.id)} />\r\n                    <AiFillDelete onClick={() => this.props.deleteTodo(todo.id)} />\r\n                </div>\r\n            )\r\n        }\r\n        })  \r\n        )\r\n    } else if(this.props.selected === \"done\") {\r\n           const done = this.props.todos.filter(todo => todo.checked === true);\r\n           return(\r\n               done.map(todo => {\r\n                   return(\r\n                    <div key={todo.id} className='checked todoDiv'>\r\n                    <p>{todo.text}</p>\r\n                    <input type=\"checkbox\" defaultChecked={todo.checked}\r\n                    onClick={() => this.props.onCheck(todo.id)} />\r\n                    <AiFillDelete className='icon' onClick={() => this.props.deleteTodo(todo.id)} />\r\n                </div>\r\n                   )\r\n               })\r\n           )\r\n    } else {\r\n        const notDone = this.props.todos.filter(todo => todo.checked === false);\r\n        return(\r\n            notDone.map(todo => {\r\n                return(\r\n                    <div key={todo.id} className='unChecked todoDiv'>\r\n                            <p>{todo.text}</p>\r\n                    <input type=\"checkbox\" defaultChecked={todo.checked}\r\n                    onClick={() => this.props.onCheck(todo.id)} />\r\n                    <AiFillDelete onClick={() => this.props.deleteTodo(todo.id)} />\r\n                </div>\r\n                )\r\n            })\r\n        )\r\n\r\n    }\r\n}\r\n    \r\n    render(){\r\n        return(\r\n        <div>\r\n            {this.renderList()}\r\n        </div>\r\n    )\r\n}\r\n}\r\n\r\nexport default Todo;","import React, { useState } from 'react';\r\n\r\nimport Todo from './Todo';\r\nimport './scss/TodoFilter.scss'\r\n\r\nconst TodoFilter = ({ onSelect }) => {\r\n    \r\n\r\n    return(\r\n    <div>\r\n        <select onChange={onSelect} className='filter'>\r\n            <option value=\"all\">All</option>\r\n            <option value=\"done\">Done</option>\r\n            <option value=\"notDone\">Not Done</option>\r\n        </select>\r\n    </div>)\r\n};\r\n\r\nexport default TodoFilter","import React, { useState } from 'react';\r\n\r\nimport TodoForm from './TodoForm';\r\nimport TodoFilter from './TodoFilter'; \r\nimport Todo from './Todo';\r\n\r\nimport './scss/TodoList.scss'\r\n\r\nconst TodoList = () => {\r\n\r\n    const[todos, setTodos] = useState([\r\n        {\r\n            id: 1,\r\n            text: 'hi',\r\n            checked: false\r\n        },\r\n        {\r\n            id:2,\r\n            text: 'call mom',\r\n            checked: true\r\n        }\r\n    ])\r\n    const[selected, setSelected] = useState(\"all\")\r\n\r\n    const onSelect = (e) => {\r\n        setSelected(e.target.value)\r\n\r\n        console.log(selected)\r\n    };\r\n\r\n    const deleteTodo = (id) => {\r\n        const newTodos = todos.filter(todos => todos.id !== id);\r\n\r\n        setTodos(newTodos);\r\n    };\r\n\r\n    const deleteDone = () => {\r\n        const newTodos = todos.filter(todo => todo.checked === false);\r\n\r\n        setTodos(newTodos)\r\n    }\r\n\r\n    const onCheck = (id) => {\r\n        setTodos(todos.map((todo) => {\r\n            if (todo.id === id)\r\n                return {\r\n                   ...todo,\r\n                   checked: !todo.checked\r\n                };\r\n            return todo;\r\n        })\r\n        );\r\n        console.log(todos)\r\n        };\r\n\r\n    return(\r\n            <div>\r\n                <div className='headerWrapper'>\r\n                <TodoForm setTodos={setTodos} todos={todos}/>\r\n                <TodoFilter onSelect={onSelect} />\r\n                </div>\r\n                <Todo todos={todos} onCheck={onCheck} deleteTodo={deleteTodo} selected={selected}/>\r\n                <div className='deleteWrapper'>\r\n                <button onClick={deleteDone}>Delete Done</button>\r\n                </div>\r\n            </div>\r\n        )\r\n        \r\n};\r\n\r\nexport default TodoList;","import React from 'react';\r\n\r\nimport TodoList from './Todos/TodoList';\r\nimport './app.scss';\r\n\r\n\r\nconst App = () => {\r\n    return(\r\n        <TodoList />\r\n    )\r\n};\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './components/App'\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}